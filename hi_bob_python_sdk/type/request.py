# coding: utf-8

"""
    Bob API

    Access your employees data with the Bob API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING


class RequiredRequest(TypedDict):
    pass

class OptionalRequest(TypedDict, total=False):
    requestId: int

    # Employee ID.
    employeeId: str

    # Request policy type, e.g. Holiday, Sick or any defined custom type.
    policyType: str

    # Display name for the policy type. This will be translated based on the locale.
    policyTypeDisplayName: str

    # The type of request duration.<br> <b>portionOnRange</b> is when the request is for every morning or every afternoon during the days requested.<br> <b>hoursOnRange</b> is when the request is for X hours every day during the days requested.
    type: str

    # Date of the first day of the time off (not relevant for requests using the hours type).
    startDate: date

    # What portion of the first day is included - all_day, morning or afternoon (relevant for request using the days type).
    startPortion: str

    # Date of the last day of the time off (not relevant for requests using the hours type).
    endDate: date

    # What portion of the last day is included - all_day, morning or afternoon (relevant for requests using the days type).
    endPortion: str

    # What portion of the request's days is included - morning or afternoon (relevant for requests using the portionOnRange type).
    dayPortion: str

    # Date of the time off (relevant for request using the hours type)
    date: date

    # The time off duration in hours for the date (relevant for request using the hours type).
    hoursOnDate: int

    # Relevant for request using the hours type.
    minutes: int

    # The time off duration in hours for every day in the request (relevant for requests using the hoursOnRange type).
    dailyHours: typing.Union[int, float]

    # Request status. This can be either Approved or Pending.
    status: str

    # Employee display name.
    employeeDisplayName: str

class Request(RequiredRequest, OptionalRequest):
    pass
