# coding: utf-8

"""
    Bob API

    Access your employees data with the Bob API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from hi_bob_python_sdk import schemas  # noqa: F401


class EmployeeTermination(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "terminationDate",
        }
        
        class properties:
            terminationDate = schemas.DateSchema
            terminationReason = schemas.StrSchema
            reasonType = schemas.StrSchema
        
            @staticmethod
            def noticePeriod() -> typing.Type['EmployeeTerminationNoticePeriod']:
                return EmployeeTerminationNoticePeriod
            lastDayOfWork = schemas.DateSchema
            __annotations__ = {
                "terminationDate": terminationDate,
                "terminationReason": terminationReason,
                "reasonType": reasonType,
                "noticePeriod": noticePeriod,
                "lastDayOfWork": lastDayOfWork,
            }
    
    terminationDate: MetaOapg.properties.terminationDate
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["terminationDate"]) -> MetaOapg.properties.terminationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["terminationReason"]) -> MetaOapg.properties.terminationReason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reasonType"]) -> MetaOapg.properties.reasonType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["noticePeriod"]) -> 'EmployeeTerminationNoticePeriod': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastDayOfWork"]) -> MetaOapg.properties.lastDayOfWork: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["terminationDate", "terminationReason", "reasonType", "noticePeriod", "lastDayOfWork", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["terminationDate"]) -> MetaOapg.properties.terminationDate: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["terminationReason"]) -> typing.Union[MetaOapg.properties.terminationReason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reasonType"]) -> typing.Union[MetaOapg.properties.reasonType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["noticePeriod"]) -> typing.Union['EmployeeTerminationNoticePeriod', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastDayOfWork"]) -> typing.Union[MetaOapg.properties.lastDayOfWork, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["terminationDate", "terminationReason", "reasonType", "noticePeriod", "lastDayOfWork", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        terminationDate: typing.Union[MetaOapg.properties.terminationDate, str, date, ],
        terminationReason: typing.Union[MetaOapg.properties.terminationReason, str, schemas.Unset] = schemas.unset,
        reasonType: typing.Union[MetaOapg.properties.reasonType, str, schemas.Unset] = schemas.unset,
        noticePeriod: typing.Union['EmployeeTerminationNoticePeriod', schemas.Unset] = schemas.unset,
        lastDayOfWork: typing.Union[MetaOapg.properties.lastDayOfWork, str, date, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeeTermination':
        return super().__new__(
            cls,
            *args,
            terminationDate=terminationDate,
            terminationReason=terminationReason,
            reasonType=reasonType,
            noticePeriod=noticePeriod,
            lastDayOfWork=lastDayOfWork,
            _configuration=_configuration,
            **kwargs,
        )

from hi_bob_python_sdk.model.employee_termination_notice_period import EmployeeTerminationNoticePeriod
