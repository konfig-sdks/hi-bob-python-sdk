# coding: utf-8

"""
    Bob API

    Access your employees data with the Bob API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from hi_bob_python_sdk.pydantic.years_of_service_increments import YearsOfServiceIncrements

class Policy(BaseModel):
    # Policy description.
    description: typing.Optional[str] = Field(None, alias='description')

    name: typing.Optional[str] = Field(None, alias='name')

    # Base annual allowance.
    allowance: typing.Optional[typing.Union[int, float]] = Field(None, alias='allowance')

    # Maximum balance at the end of the cycle.
    max_balance: typing.Optional[typing.Union[int, float]] = Field(None, alias='maxBalance')

    # Minimum balance cap.
    min_balance: typing.Optional[typing.Union[int, float]] = Field(None, alias='minBalance')

    yos_increase: typing.Optional[typing.List[YearsOfServiceIncrements]] = Field(None, alias='yosIncrease')

    # The shortest amount of time employees can request.
    min_time_off_request_duration: typing.Optional[Literal["fullDay", "halfDay", "fullHour", "halfHour", "quarterHour"]] = Field(None, alias='minTimeOffRequestDuration')

    # Requests require approval.
    approval_required: typing.Optional[bool] = Field(None, alias='approvalRequired')

    unit: typing.Optional[Literal["days", "hours"]] = Field(None, alias='unit')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
