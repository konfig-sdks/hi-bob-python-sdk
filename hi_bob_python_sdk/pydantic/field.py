# coding: utf-8

"""
    Bob API

    Access your employees data with the Bob API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from hi_bob_python_sdk.pydantic.field_type_data import FieldTypeData

class Field(BaseModel):
    # Description of the field.
    description: typing.Optional[str] = Field(None, alias='description')

    # ID of the field.
    id: typing.Optional[str] = Field(None, alias='id')

    # Category of the field.
    category: typing.Optional[str] = Field(None, alias='category')

    # Name of the field.
    name: typing.Optional[str] = Field(None, alias='name')

    # A dot-separated path of this field value in the employee JSON returned by the /v1/profiles endpoint.
    json_path: typing.Optional[str] = Field(None, alias='jsonPath')

    # The type of the field. Supported field types: text, text-area, number, date, list, multi-list, hierarchy-list, currency, employee-reference, document.
    type: typing.Optional[str] = Field(None, alias='type')

    type_data: typing.Optional[FieldTypeData] = Field(None, alias='typeData')

    # When true, this field keeps the history of its values, each being active starting from a certain date. The default value is false.
    historical: typing.Optional[bool] = Field(None, alias='historical')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
