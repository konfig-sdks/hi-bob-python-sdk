# coding: utf-8

"""
    Bob API

    Access your employees data with the Bob API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class BalanceResult(BaseModel):
    # Employee ID.
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    # The retrieved balance as of this date.
    total_balance_as_of_date: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalBalanceAsOfDate')

    # The retrieved rounded balance as of this date.
    total_rounded_balance_as_of_date: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalRoundedBalanceAsOfDate')

    # The balance date.
    point_in_time: typing.Optional[date] = Field(None, alias='pointInTime')

    # The balance as of the cycle start date.
    starting_balance: typing.Optional[typing.Union[int, float]] = Field(None, alias='startingBalance')

    # The cycle start date.
    starting_balance_as_of: typing.Optional[date] = Field(None, alias='startingBalanceAsOf')

    # Total number of days/hours taken.
    total_taken: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalTaken')

    # Total number of days/hours manually adjusted.
    total_admin_adjustments: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalAdminAdjustments')

    # Total number of days/hours adjusted.
    total_system_adjustments: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalSystemAdjustments')

    # Annual allowance.
    annual_allowance: typing.Optional[typing.Union[int, float]] = Field(None, alias='annualAllowance')

    # Policy name.
    policy: typing.Optional[str] = Field(None, alias='policy')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
